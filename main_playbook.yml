- name: Installing and Configuring ELK 
  hosts: elastic_stack
  tasks:
    - name: Including Variables
      include_vars:
        file: config.yaml

    - name: Installing Java (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing nginx (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: nginx
        service: nginx
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Install Elasticsearch (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: elasticsearch
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Java (Centos)
      include_role:
        name: centos_package
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing nginx (Centos)
      include_role:
        name: centos_package
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing Elasticsearch (CentOS)
      include_role:
        name: centos_package
      vars:
        package: elasticsearch
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Configuring Elasticsearch
      include_role:
        name: elasticsearch

- name: Installing and Configuring Kibana
  hosts: elastic_stack
  tasks:
    - name: Including Variable
      include_vars:
        file: config.yaml

    - name: Installing Java (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing nginx (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Kibana (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: kibana
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Java (CentOS)
      include_role:
        name: centos_package
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing nginx (CentOS)
      include_role:
        name: centos_package
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing Kibana (CentOS)
      include_role:
        name: centos_package
      vars:
        package: kibana
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing Kibana
      include_role:
        name: kibana

- name: Installing and Configuring Logstash
  hosts: elastic_stack
  tasks:
    - name: Include Variable
      include_vars:
        file: config.yaml

    - name: Installing Java (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing nginx (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Logstash (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: logstash
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Java (CentOS)
      include_role:
        name: centos_package
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing nginx (CentOS)
      include_role:
        name: package_centos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing Logstash (CentOS)
      include_role:
        name: centos_package
      vars:
        package: logstash
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Configuring Logstash
      include_role:
        name: logstash

- name: Installing and Configure Nagios
  hosts: nagios
  tasks:
    - name: Include variable
      include_vars:
        file: config.yaml

    - name: Installing Nagios Packages (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package:
          - autoconf
          - gcc
          - libc6
          - make
          - wget
          - libssl-dev
          - gawk
          - dc
          - build-essential
          - snmp
          - libnet-snmp-perl
          - gettext
          - unzip
          - apache2
          - php
          - libapache2-mod-php7.4
          - libgd-dev
          - python3
          - python3-pip
        service: ""
    - name: Configure nagios
      include_role:
        name: nagios

- name: Installing Grafana
  hosts: grafana
  tasks:
    - name: Installing Grafana (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: "https://packages.grafana.com/gpg.key"
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        package: "grafana"
        service: "grafana-server"
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Grafana (CentOS)
      include_role:
        name: centos_package
      vars:
        src: grafana.repo-centos
        dest: "/etc/yum.repos.d/grafana.repo"
        package: grafana
        service: grafana-server
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall
      when: ansible_facts['distribution'] == 'CentOS'

- name: Installing Influxdb
  hosts: influxdb
  tasks:
    - name: Installing Packages Telegraf (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: gnupg2
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Packages Telegraf (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: software-properties-common
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing influxdb (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: "https:/repos.influxdata.com/influx.key"
        repo: "deb https://repos.influxdata.com/ubuntu bionic stable"
        package: influxdb
        service: influxdb
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Telegraf (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: telegraf
        service: telegraf
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Influxdb (CentOS)
      include_role:
        name: centos_package
      vars:
        src: influxdb.repo-centos
        dest: /etc/yum.repos.d/influx.repo
        package: influxdb
        service: influxdb
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Installing Telegraf Packages (CentOS)
      include_role:
        name: centos_package
      vars:
        src: ""
        dest: ""
        package: telegraf
        service: telegraf
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall

- name: Installing Prometheus
  hosts: prometheus
  tasks:
    - name: Installing Prometheus (Ubuntu)
      include_role:
        name: ubuntu_prometheus
      vars:
        src: prometheus.service
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Prometheus (CentOS)
      include_role:
        name: centos_prometheus
      vars:
        src: prometheus.service
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall
      when: ansible_facts['distribution'] == 'CentOS'

- name: Installing and Configuring Httpd
  hosts: lamp_stack
  tasks:
    - name: Include variables
      include_vars:
        file: config.yaml

    - name: Installing Apache (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package:
          - apache2
          - php
          - libapache2-mod-php
          - php-mysql
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing Httpd (CentOS)
      include_role:
        name: centos_package
      vars:
        package:
          - httpd
          - php
          - php-mysqlnd
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Configuring Apache2 (Ubuntu)
      include_role:
        name: ubuntu_apache
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Configuring Httpd (CentOS)
      include_role:
        name: centos_httpd
      when: ansible_facts['distribution'] == 'CentOS'

- name: Installing MariaDB
  hosts: lamp_stack
  tasks:
    - name: Installing mariadb (Ubuntu)
      include_role:
        name: ubuntu_package
      vars:
        url: ""
        repo: ""
        package: mariadb-server
        service: ""
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Installing mariadb (CentOS)
      include_role:
        name: centos_package
      vars:
        package: mariadb-server
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['distribution'] == 'CentOS'

    - name: Disabling Firewall (Ubuntu)
      include_role:
        name: ubuntu_firewall
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Disabling Firewall (CentOS)
      include_role:
        name: centos_firewall
      when: ansible_facts['distribution'] == 'CentOS'
